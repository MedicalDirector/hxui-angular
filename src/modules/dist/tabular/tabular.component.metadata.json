[{"__symbolic":"module","version":4,"metadata":{"TabularComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":11,"character":1},"arguments":[{"selector":"hx-tabular","template":"<table class=\"tabular hx-table is-striped\">\n    <thead>\n    <tr>\n      <th *ngFor=\"let col of columns\" class=\"{{col.cssClass}} tabular__{{col.label}}\" [ngClass]=\"{'tabular__checkboxes': col.dataType === 6}\">\n\n        <!-- sortable column -->\n        <a class=\"tabular__sorter\" *ngIf=\"col.sortable && col.dataType != 6\" (click)=\"onSortClickHandler(col.id)\">{{col.label}}<i class=\"icon {{iconDirection}}\" *ngIf=\"orderBy == col.id\"></i></a>\n\n        <!-- non sortable column -->\n        <span *ngIf=\"!col.sortable && col.dataType != 6\">{{col.label}}</span>\n\n        <!-- checkbox column -->\n        <div *ngIf=\"col.dataType == 6\" class=\"hx-checkbox-control\">\n          <input id=\"selectAll\" name=\"selectAll\" type=\"checkbox\" class=\"hx-checkbox\" (change)=\"toggleSelectAll($event)\" title=\"Select All\" [(ngModel)]=\"selectAll\" />\n          <label for=\"selectAll\" class=\"hx-label\"></label>\n        </div>\n      </th>\n    </tr>\n    </thead>\n\n    <tbody>\n    <!--<tr *ngFor=\"let row of rows | paginate: config.pagination | simpleSearch: searchTerm\">-->\n    <tr *ngFor=\"let row of pagedItems | simpleSearch: searchTerm\">\n      <td *ngFor=\"let col of columns\" class=\"{{col.cssClass}} tabular__{{col.label}}\" [ngClass]=\"{'tabular__checkboxes': col.dataType === 6}\">\n\n        <!-- string type -->\n        <span *ngIf=\"col.dataType == 0\">{{row[col.id]}}</span>\n\n        <!-- icon type -->\n        <i *ngIf=\"col.dataType == 1\" class=\"icon {{row[col.id]}}\"></i>\n\n        <!-- date type -->\n        <span *ngIf=\"col.dataType == 2\">{{row[col.id] | date}}</span>\n\n        <!-- status type -->\n        <span *ngIf=\"col.dataType == 4\" class=\"hx-badge text-uppercase\" [ngClass]=\"{'is-primary':row[col.id],'is-danger':!row[col.id]}\">{{(row[col.id])?'ACTIVE':'INACTIVE'}}</span>\n\n        <!-- date time type -->\n        <span *ngIf=\"col.dataType == 5\">{{row[col.id] | date:'medium'}}</span>\n\n        <!-- actions type -->\n        <div *ngIf=\"col.dataType==3\" class=\"hx-dropdown tabularActions\">\n\n\n          <div class=\"tabularActions__action\">\n            <div class=\"hx-dropdown\" hxDropdown [isRight]=\"true\">\n\n              <button class=\"hx-button is-small hx-button-dropdown\" hxDropdownToggle type=\"button\">\n                <i class=\"icon icon-more\"></i>\n              </button>\n              <div class=\"hx-dropdown-menu\" *hxDropdownMenu>\n\n                <ng-container *ngFor=\"let action of row[col.id]\">\n                  <a *ngIf=\"!getActionDisabledState(action) && action.routeType==0\"\n                     [routerLink]=\"action.route\"\n                     class=\"hx-dropdown-item {{action.css}}\"\n                     [innerHTML]=\"action.label\">\n                  </a>\n                  <a *ngIf=\"!getActionDisabledState(action) && action.routeType==1\"\n                     (click)='executeCallback($event,action.callback)'\n                     class=\"hx-dropdown-item {{action.css}}\"\n                     [innerHTML]=\"action.label\">\n                  </a>\n                </ng-container>\n\n              </div>\n\n            </div>\n\n          </div>\n        </div>\n\n        <!-- checkbox type -->\n        <div *ngIf=\"col.dataType == 6\" class=\"hx-checkbox-control\">\n          <input id=\"checkbox-{{row.id}}\" name=\"{{col.label}}-checkbox\" type=\"checkbox\" class=\"hx-checkbox\" title=\"{{col.label}}\" (change)=\"toggleIndividualSelect($event)\" [(ngModel)]=\"row.selected\" />\n          <label for=\"checkbox-{{row.id}}\" class=\"hx-label\"></label>\n        </div>\n\n      </td>\n    </tr>\n    </tbody>\n  </table>\n\n  <hx-pagination [directionLinks]=\"true\" [boundaryLinks]=\"true\" [rotate]=\"false\" [maxSize]=\"10\"\n                 [totalItems]=\"totalItemCount\" [itemsPerPage]=\"config.pagination.itemsPerPage\"\n                 [(ngModel)]=\"config.pagination.currentPage\" (pageChanged)=\"setPage($event)\"></hx-pagination>\n  ","styles":[".tabular__sorter{position:relative;cursor:pointer} th .icon{position: absolute;}",".tabular__checkboxes{width:2%;}",".tabular__checkboxes .hx-checkbox-control{margin:0;display:flex;}"]}]}],"members":{"columns":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":113,"character":3}}]}],"rows":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":119,"character":4}}]}],"config":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":126,"character":3}}]}],"callback":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":135,"character":3}}]}],"searchTerm":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":147,"character":3}}]}],"refresh":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":160,"character":3}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"./tabular.config","name":"TabularConfig","line":179,"character":35},{"__symbolic":"reference","module":"./tabular-order-by.service","name":"TabularOrderByService","line":180,"character":45}]}],"ngOnInit":[{"__symbolic":"method"}],"ngDoCheck":[{"__symbolic":"method"}],"executeCallback":[{"__symbolic":"method"}],"setPage":[{"__symbolic":"method"}],"getActionTooltip":[{"__symbolic":"method"}],"getActionDisabledState":[{"__symbolic":"method"}],"onSortClickHandler":[{"__symbolic":"method"}],"orderByData":[{"__symbolic":"method"}],"isSmall":[{"__symbolic":"method"}]}}}}]