{"version":3,"file":"tabular-order-by.service.js","sourceRoot":"","sources":["../../tabular/tabular-order-by.service.ts"],"names":[],"mappings":"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","sourcesContent":["import {Injectable} from '@angular/core';\r\n\r\nexport enum OrderByDirection{\r\n    Ascending,\r\n    Descending,\r\n    None\r\n}\r\n\r\n@Injectable()\r\nexport class TabularOrderByService {\r\n    constructor(){}\r\n\r\n    static _orderByComparator(a: any, b: any): number{\r\n\r\n        if ((isNaN(parseFloat(a)) || !isFinite(a)) || (isNaN(parseFloat(b)) || !isFinite(b))){\r\n            //Isn't a number so lowercase the string to properly compare\r\n            if (a.toLowerCase() < b.toLowerCase()) return -1;\r\n            if (a.toLowerCase() > b.toLowerCase()) return 1;\r\n        }\r\n        else{\r\n            //Parse strings as numbers to compare properly\r\n            if (parseFloat(a) < parseFloat(b)) return -1;\r\n            if (parseFloat(a) > parseFloat(b)) return 1;\r\n        }\r\n\r\n        return 0; //equal each other\r\n    }\r\n\r\n\r\n    public doTransform(data: any, [config = '+']){\r\n        if (!Array.isArray(data)) return data;\r\n\r\n        if (!Array.isArray(config) || (Array.isArray(config) && config.length == 1)){\r\n            const propertyToCheck: string = !Array.isArray(config) ? config : config[0];\r\n            const desc = propertyToCheck.substr(0, 1) == '-';\r\n\r\n            // Basic array\r\n            if (!propertyToCheck || propertyToCheck == '-' || propertyToCheck == '+'){\r\n                return !desc ? data.sort() : data.sort().reverse();\r\n            }\r\n            else {\r\n                const property: string = propertyToCheck.substr(0, 1) == '+' || propertyToCheck.substr(0, 1) == '-'\r\n                    ? propertyToCheck.substr(1)\r\n                    : propertyToCheck;\r\n\r\n                return data.sort(function(a: any, b: any){\r\n                    return !desc\r\n                        ? TabularOrderByService._orderByComparator(a[property], b[property])\r\n                        : -TabularOrderByService._orderByComparator(a[property], b[property]);\r\n                });\r\n            }\r\n        } else {\r\n            // Loop over property of the array in order and sort\r\n            return data.sort(function(a: any, b: any){\r\n                for (let i = 0; i < config.length; i++){\r\n                    const desc = config[i].substr(0, 1) == '-';\r\n                    const property = config[i].substr(0, 1) == '+' || config[i].substr(0, 1) == '-'\r\n                        ? config[i].substr(1)\r\n                        : config[i];\r\n\r\n                    const comparison = !desc\r\n                        ? TabularOrderByService._orderByComparator(a[property], b[property])\r\n                        : -TabularOrderByService._orderByComparator(a[property], b[property]);\r\n\r\n                    // Don't return 0 yet in case of needing to sort by next property\r\n                    if (comparison !== 0) return comparison;\r\n                }\r\n\r\n                return 0; // equal each other\r\n            });\r\n        }\r\n    }\r\n}\r\n"]}