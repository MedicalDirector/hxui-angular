{"version":3,"file":"pagination.component.js","sourceRoot":"","sources":["../../pagination/pagination.component.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  Component, ElementRef, EventEmitter, Input, OnInit, Output, Renderer, Self, forwardRef\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { PaginationConfig } from './pagination.config';\n\nexport interface PageChangedEvent {\n  itemsPerPage: number;\n  page: number;\n}\n\nexport const PAGINATION_CONTROL_VALUE_ACCESSOR: any = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => PaginationComponent),\n  multi: true\n};\n\nconst PAGINATION_TEMPLATE = `\n  <ul class=\"hx-pagination\" [ngClass]=\"classMap\">\n    <li class=\"is-first\"\n        *ngIf=\"boundaryLinks\"\n        [class.is-disabled]=\"noPrevious()||disabled\">\n      <a href (click)=\"selectPage(1, $event)\" [innerHTML]=\"getText('first')\"></a>\n    </li>\n\n    <li class=\"is-prev\"\n        *ngIf=\"directionLinks\"\n        [class.is-disabled]=\"noPrevious()||disabled\">\n      <a href (click)=\"selectPage(page - 1, $event)\" [innerHTML]=\"getText('previous')\"></a>\n      </li>\n\n    <li *ngFor=\"let pg of pages\"\n        [class.is-current]=\"pg.active\"\n        [class.is-disabled]=\"disabled&&!pg.active\">\n      <a href (click)=\"selectPage(pg.number, $event)\" [innerHTML]=\"pg.text\"></a>\n    </li>\n\n    <li class=\"is-next\"\n        *ngIf=\"directionLinks\"\n        [class.is-disabled]=\"noNext()||disabled\">\n      <a class=\"page-link\" href (click)=\"selectPage(page + 1, $event)\" [innerHTML]=\"getText('next')\"></a></li>\n\n    <li class=\"is-last\"\n        *ngIf=\"boundaryLinks\"\n        [class.is-disabled]=\"noNext()||disabled\">\n      <a href (click)=\"selectPage(totalPages, $event)\" [innerHTML]=\"getText('last')\"></a></li>\n  </ul>\n  `;\n\n@Component({\n  selector: 'hx-pagination',\n  template: PAGINATION_TEMPLATE,\n  providers: [PAGINATION_CONTROL_VALUE_ACCESSOR]\n})\nexport class PaginationComponent implements ControlValueAccessor, OnInit {\n  public config: any;\n  /** if `true` aligns each link to the sides of pager */\n  @Input() public align: boolean;\n  /** limit number for page links in pager */\n  @Input() public maxSize: number;\n  /** if false first and last buttons will be hidden */\n  @Input() public boundaryLinks: boolean;\n  /** if false previous and next buttons will be hidden */\n  @Input() public directionLinks: boolean;\n  // labels\n  /** first button text */\n  @Input() public firstText: string;\n  /** previous button text */\n  @Input() public previousText: string;\n  /** next button text */\n  @Input() public nextText: string;\n  /** last button text */\n  @Input() public lastText: string;\n  /** if true current page will in the middle of pages list */\n  @Input() public rotate: boolean;\n  // css\n  /** add class to <li> */\n  @Input() public pageBtnClass: string;\n\n  /** if true pagination component will be disabled */\n  @Input() public disabled: boolean;\n\n  /** fired when total pages count changes, $event:number equals to total pages count */\n  @Output() public numPages: EventEmitter<number> = new EventEmitter<number>();\n  /** fired when page was changed, $event:{page, itemsPerPage} equals to object with current page index and number of items per page */\n  @Output() public pageChanged: EventEmitter<PageChangedEvent> = new EventEmitter<PageChangedEvent>();\n\n  /** maximum number of items per page. If value less than 1 will display all items on one page */\n  @Input()\n  public get itemsPerPage(): number {\n    return this._itemsPerPage;\n  }\n\n  public set itemsPerPage(v: number) {\n    this._itemsPerPage = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n\n  /** total number of items in all pages */\n  @Input()\n  public get totalItems(): number {\n    return this._totalItems;\n  }\n\n  public set totalItems(v: number) {\n    this._totalItems = v;\n    this.totalPages = this.calculateTotalPages();\n  }\n\n  public get totalPages(): number {\n    return this._totalPages;\n  }\n\n  public set totalPages(v: number) {\n    this._totalPages = v;\n    this.numPages.emit(v);\n    if (this.inited) {\n      this.selectPage(this.page);\n    }\n  }\n\n  public set page(value: number) {\n    const _previous = this._page;\n    this._page = (value > this.totalPages) ? this.totalPages : (value || 1);\n\n    if (_previous === this._page || typeof _previous === 'undefined') {\n      return;\n    }\n\n    this.pageChanged.emit({\n      page: this._page,\n      itemsPerPage: this.itemsPerPage\n    });\n  }\n\n  public get page(): number {\n    return this._page;\n  }\n\n  public onChange: any = Function.prototype;\n  public onTouched: any = Function.prototype;\n  public renderer: Renderer;\n  public elementRef: ElementRef;\n  public classMap: string;\n  public pages: any[];\n\n  protected _itemsPerPage: number;\n  protected _totalItems: number;\n  protected _totalPages: number;\n  protected inited = false;\n  protected _page = 1;\n\n  public constructor(renderer: Renderer, elementRef: ElementRef, paginationConfig: PaginationConfig) {\n    this.renderer = renderer;\n    this.elementRef = elementRef;\n    if (!this.config) {\n      this.configureOptions(paginationConfig.main);\n    }\n  }\n\n  public configureOptions(config: any): void {\n    this.config = Object.assign({}, config);\n  }\n\n  public ngOnInit(): void {\n    this.classMap = this.elementRef.nativeElement.getAttribute('class') || '';\n    // watch for maxSize\n    this.maxSize = typeof this.maxSize !== 'undefined'\n      ? this.maxSize\n      : this.config.maxSize;\n    this.rotate = typeof this.rotate !== 'undefined'\n      ? this.rotate\n      : this.config.rotate;\n    this.boundaryLinks = typeof this.boundaryLinks !== 'undefined'\n      ? this.boundaryLinks\n      : this.config.boundaryLinks;\n    this.directionLinks = typeof this.directionLinks !== 'undefined'\n      ? this.directionLinks\n      : this.config.directionLinks;\n    this.pageBtnClass = typeof this.pageBtnClass !== 'undefined'\n    ? this.pageBtnClass\n    : this.config.pageBtnClass;\n\n    // base class\n    this.itemsPerPage = typeof this.itemsPerPage !== 'undefined'\n      ? this.itemsPerPage\n      : this.config.itemsPerPage;\n    this.totalPages = this.calculateTotalPages();\n    // this class\n    this.pages = this.getPages(this.page, this.totalPages);\n    this.inited = true;\n  }\n\n  public writeValue(value: number): void {\n    this.page = value;\n    this.pages = this.getPages(this.page, this.totalPages);\n  }\n\n  public getText(key: string): string {\n    return (this as any)[key + 'Text'] || this.config[key + 'Text'];\n  }\n\n  public noPrevious(): boolean {\n    return this.page === 1;\n  }\n\n  public noNext(): boolean {\n    return this.page === this.totalPages;\n  }\n\n  public registerOnChange(fn: (_: any) => {}): void {\n    this.onChange = fn;\n  }\n\n  public registerOnTouched(fn: () => {}): void {\n    this.onTouched = fn;\n  }\n\n  public selectPage(page: number, event?: Event): void {\n    if (event) {\n      event.preventDefault();\n    }\n\n    if (!this.disabled) {\n      if (event && event.target) {\n        const target: any = event.target;\n        target.blur();\n      }\n      this.writeValue(page);\n      this.onChange(this.page);\n    }\n  }\n\n  // Create page object used in template\n  protected makePage(num: number, text: string, active: boolean): {number: number, text: string, active: boolean} {\n    return { text, number: num, active };\n  }\n\n  protected getPages(currentPage: number, totalPages: number): any[] {\n    const pages: any[] = [];\n\n    // Default page limits\n    let startPage = 1;\n    let endPage = totalPages;\n    const isMaxSized = typeof this.maxSize !== 'undefined' && this.maxSize < totalPages;\n\n    // recompute if maxSize\n    if (isMaxSized) {\n      if (this.rotate) {\n        // Current page is displayed in the middle of the visible ones\n        startPage = Math.max(currentPage - Math.floor(this.maxSize / 2), 1);\n        endPage = startPage + this.maxSize - 1;\n\n        // Adjust if limit is exceeded\n        if (endPage > totalPages) {\n          endPage = totalPages;\n          startPage = endPage - this.maxSize + 1;\n        }\n      } else {\n        // Visible pages are paginated with maxSize\n        startPage = ((Math.ceil(currentPage / this.maxSize) - 1) * this.maxSize) + 1;\n\n        // Adjust last page if limit is exceeded\n        endPage = Math.min(startPage + this.maxSize - 1, totalPages);\n      }\n    }\n\n    // Add page number links\n    for (let num = startPage; num <= endPage; num++) {\n      const page = this.makePage(num, num.toString(), num === currentPage);\n      pages.push(page);\n    }\n\n    // Add links to move between page sets\n    if (isMaxSized && !this.rotate) {\n      if (startPage > 1) {\n        const previousPageSet = this.makePage(startPage - 1, '...', false);\n        pages.unshift(previousPageSet);\n      }\n\n      if (endPage < totalPages) {\n        const nextPageSet = this.makePage(endPage + 1, '...', false);\n        pages.push(nextPageSet);\n      }\n    }\n\n    return pages;\n  }\n\n  // base class\n  protected calculateTotalPages(): number {\n    const totalPages = this.itemsPerPage < 1\n      ? 1\n      : Math.ceil(this.totalItems / this.itemsPerPage);\n    return Math.max(totalPages || 0, 1);\n  }\n}\n"]}