{"version":3,"file":"component-loader.class.js","sourceRoot":"","sources":["../../component-loader/component-loader.class.ts"],"names":[],"mappings":"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","sourcesContent":["// todo: add delay support\r\n// todo: merge events onShow, onShown, etc...\r\n// todo: add global positioning configuration?\r\nimport {\r\n  NgZone, ViewContainerRef, ComponentFactoryResolver, Injector, Renderer,\r\n  ElementRef, ComponentRef, ComponentFactory, Type, TemplateRef, EventEmitter,\r\n  Provider, ReflectiveInjector\r\n} from '@angular/core';\r\nimport { ContentRef } from './content-ref.class';\r\nimport { PositioningService } from '../positioning/positioning.service';\r\nimport { listenToTriggers } from '../utils/triggers';\r\nimport {PositioningOptions} from '../positioning/positioning.options';\r\n\r\nexport interface ListenOptions {\r\n  target?: ElementRef;\r\n  triggers?: string;\r\n  show?: Function;\r\n  hide?: Function;\r\n  toggle?: Function;\r\n}\r\n\r\nexport class ComponentLoader<T> {\r\n  public onBeforeShow: EventEmitter<any> = new EventEmitter();\r\n  public onShown: EventEmitter<any> = new EventEmitter();\r\n  public onBeforeHide: EventEmitter<any> = new EventEmitter();\r\n  public onHidden: EventEmitter<any> = new EventEmitter();\r\n\r\n  public instance: T;\r\n  public _componentRef: ComponentRef<T>;\r\n\r\n  private _providers: Provider[] = [];\r\n  private _componentFactory: ComponentFactory<T>;\r\n  private _elementRef: ElementRef;\r\n  private _zoneSubscription: any;\r\n  private _contentRef: ContentRef;\r\n  private _viewContainerRef: ViewContainerRef;\r\n  private _injector: Injector;\r\n  private _renderer: Renderer;\r\n  private _ngZone: NgZone;\r\n  private _componentFactoryResolver: ComponentFactoryResolver;\r\n  private _posService: PositioningService;\r\n\r\n  private _unregisterListenersFn: Function;\r\n\r\n  public get isShown(): boolean {\r\n    return !!this._componentRef;\r\n  };\r\n\r\n  /**\r\n   * Placement of a component. Accepts: \"top\", \"bottom\", \"left\", \"right\"\r\n   */\r\n  private attachment: string;\r\n\r\n  /**\r\n   * A selector specifying the element the popover should be appended to.\r\n   * Currently only supports \"body\".\r\n   */\r\n  private container: string | ElementRef | any;\r\n\r\n  /**\r\n   * Specifies events that should trigger. Supports a space separated list of\r\n   * event names.\r\n   */\r\n  private triggers: string;\r\n\r\n  /**\r\n   * Do not use this directly, it should be instanced via\r\n   * `ComponentLoadFactory.attach`\r\n   * @internal\r\n   * @param _viewContainerRef\r\n   * @param _elementRef\r\n   * @param _injector\r\n   * @param _renderer\r\n   * @param _componentFactoryResolver\r\n   * @param _ngZone\r\n   * @param _posService\r\n   */\r\n  // tslint:disable-next-line\r\n  public constructor(_viewContainerRef: ViewContainerRef, _renderer: Renderer,\r\n                     _elementRef: ElementRef,\r\n                     _injector: Injector, _componentFactoryResolver: ComponentFactoryResolver,\r\n                     _ngZone: NgZone, _posService: PositioningService) {\r\n    this._ngZone = _ngZone;\r\n    this._injector = _injector;\r\n    this._renderer = _renderer;\r\n    this._elementRef = _elementRef;\r\n    this._posService = _posService;\r\n    this._viewContainerRef = _viewContainerRef;\r\n    this._componentFactoryResolver = _componentFactoryResolver;\r\n  }\r\n\r\n  public attach(compType: Type<T>): ComponentLoader<T> {\r\n    this._componentFactory = this._componentFactoryResolver\r\n      .resolveComponentFactory<T>(compType);\r\n    return this;\r\n  }\r\n\r\n  // todo: add behaviour: to target element, `body`, custom element\r\n  public to(container?: string): ComponentLoader<T> {\r\n    this.container = container || this.container;\r\n    return this;\r\n  }\r\n\r\n  public position(opts?: PositioningOptions): ComponentLoader<T> {\r\n    this.attachment = opts.attachment || this.attachment;\r\n    this._elementRef = opts.target as ElementRef || this._elementRef;\r\n    return this;\r\n  }\r\n\r\n  public provide(provider: Provider): ComponentLoader<T> {\r\n    this._providers.push(provider);\r\n    return this;\r\n  }\r\n\r\n  public show(opts: {content?: string | TemplateRef<any>, [key: string]: any} = {}): ComponentRef<T> {\r\n    this._subscribePositioning();\r\n\r\n    if (!this._componentRef) {\r\n      this.onBeforeShow.emit();\r\n      this._contentRef = this._getContentRef(opts.content);\r\n      const injector = ReflectiveInjector.resolveAndCreate(this._providers, this._injector);\r\n      this._componentRef = this._viewContainerRef\r\n        .createComponent(this._componentFactory, 0, injector, this._contentRef.nodes);\r\n      this.instance = this._componentRef.instance;\r\n\r\n      Object.assign(this._componentRef.instance, opts);\r\n\r\n      if (this.container === 'body' && typeof document !== 'undefined') {\r\n        document.querySelector(this.container as string)\r\n          .appendChild(this._componentRef.location.nativeElement);\r\n      }\r\n\r\n      // we need to manually invoke change detection since events registered\r\n      // via\r\n      // Renderer::listen() are not picked up by change detection with the\r\n      // OnPush strategy\r\n      this._componentRef.changeDetectorRef.markForCheck();\r\n      this.onShown.emit(this._componentRef.instance);\r\n    }\r\n    return this._componentRef;\r\n  }\r\n\r\n  public hide(): ComponentLoader<T> {\r\n    if (this._componentRef) {\r\n      this.onBeforeHide.emit(this._componentRef.instance);\r\n      this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._componentRef.hostView));\r\n      this._componentRef = null;\r\n\r\n      if (this._contentRef.viewRef) {\r\n        this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._contentRef.viewRef));\r\n        this._contentRef = null;\r\n      }\r\n\r\n      this._componentRef = null;\r\n      this.onHidden.emit();\r\n    }\r\n    return this;\r\n  }\r\n\r\n  public toggle(): void {\r\n    if (this.isShown) {\r\n      this.hide();\r\n      return;\r\n    }\r\n\r\n    this.show();\r\n  }\r\n\r\n  public dispose(): void {\r\n    if (this.isShown) {\r\n      this.hide();\r\n    }\r\n\r\n    this._unsubscribePositioning();\r\n\r\n    if (this._unregisterListenersFn) {\r\n      this._unregisterListenersFn();\r\n    }\r\n  }\r\n\r\n  public listen(listenOpts: ListenOptions): ComponentLoader<T> {\r\n    this.triggers = listenOpts.triggers || this.triggers;\r\n\r\n    listenOpts.target = listenOpts.target || this._elementRef;\r\n    listenOpts.show = listenOpts.show || (() => this.show());\r\n    listenOpts.hide = listenOpts.hide || (() => this.hide());\r\n    listenOpts.toggle = listenOpts.toggle || (() => this.isShown\r\n        ? listenOpts.hide()\r\n        : listenOpts.show());\r\n\r\n    this._unregisterListenersFn = listenToTriggers(\r\n      this._renderer,\r\n      listenOpts.target.nativeElement,\r\n      this.triggers,\r\n      listenOpts.show,\r\n      listenOpts.hide,\r\n      listenOpts.toggle);\r\n\r\n    return this;\r\n  }\r\n\r\n  private _subscribePositioning(): void {\r\n    if (this._zoneSubscription || !this.attachment) {\r\n      return;\r\n    }\r\n\r\n    this._zoneSubscription = this._ngZone\r\n      .onStable.subscribe(() => {\r\n        if (!this._componentRef) {\r\n          return;\r\n        }\r\n        this._posService.position({\r\n          element: this._componentRef.location,\r\n          target: this._elementRef,\r\n          attachment: this.attachment,\r\n          appendToBody: this.container === 'body'\r\n        });\r\n      });\r\n  }\r\n\r\n  private _unsubscribePositioning(): void {\r\n    if (!this._zoneSubscription) {\r\n      return;\r\n    }\r\n    this._zoneSubscription.unsubscribe();\r\n    this._zoneSubscription = null;\r\n  }\r\n\r\n  private _getContentRef(content: string | TemplateRef<any>): ContentRef {\r\n    if (!content) {\r\n      return new ContentRef([]);\r\n    }\r\n\r\n    if (content instanceof TemplateRef) {\r\n      const viewRef = this._viewContainerRef\r\n        .createEmbeddedView<TemplateRef<T>>(content);\r\n      return new ContentRef([viewRef.rootNodes], viewRef);\r\n    }\r\n\r\n    return new ContentRef([[this._renderer.createText(null, `${content}`)]]);\r\n  }\r\n}\r\n"]}