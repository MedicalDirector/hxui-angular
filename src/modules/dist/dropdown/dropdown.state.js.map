{"version":3,"file":"dropdown.state.js","sourceRoot":"","sources":["../../dropdown/dropdown.state.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,YAAY,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AACzD,OAAO,EAAE,cAAc,EAAE,MAAM,4CAA4C,CAAC;;IAiB1E;QAAA,iBAQC;yBArB0B,MAAM;4BAGlB,IAAI,YAAY,EAAW;gCACvB,IAAI,YAAY,EAAW;2BAChC,IAAI,YAAY,EAAW;QASvC,IAAI,CAAC,YAAY,GAAG,IAAI,OAAO,CAAC,UAAC,OAAO;YACtC,KAAI,CAAC,mBAAmB,GAAG,OAAO,CAAC;SACpC,CAAC,CAAC;QAEH,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,UAAC,KAAc;YACzC,KAAI,CAAC,MAAM,GAAG,KAAK,CAAC;SACrB,CAAC,CAAC;KACJ;;gBAvBF,UAAU;;;;wBAHX;;SAIa,aAAa","sourcesContent":["import { EventEmitter, Injectable } from '@angular/core';\nimport { HxComponentRef } from '../component-loader/hx-component-ref.class';\n\n@Injectable()\nexport class DropdownState {\n  direction: 'down' | 'up' = 'down';\n  autoClose: boolean;\n  isOpen: boolean;\n  isOpenChange = new EventEmitter<boolean>();\n  isDisabledChange = new EventEmitter<boolean>();\n  toggleClick = new EventEmitter<boolean>();\n\n  /**\n   * Content to be displayed as popover.\n   */\n  dropdownMenu: Promise<HxComponentRef<any>>;\n  resolveDropdownMenu: (componentRef: HxComponentRef<any>) => void;\n\n  constructor() {\n    this.dropdownMenu = new Promise((resolve) => {\n      this.resolveDropdownMenu = resolve;\n    });\n\n    this.isOpenChange.subscribe((value: boolean) => {\n      this.isOpen = value;\n    });\n  }\n}\n"]}