{"version":3,"file":"tab.directive.js","sourceRoot":"","sources":["../../tabs/tab.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,SAAS,EAAE,YAAY,EAAE,WAAW,EAAE,KAAK,EAAE,MAAM,EAAE,WAAW,EAAE,MAAM,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AACzH,OAAO,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAC;;IAuDnD,sBAAmB,MAAuB,EAAS,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;;sBAZnB,IAAI,YAAY,EAAE;;wBAEhB,IAAI,YAAY,EAAE;;uBAEnB,IAAI,YAAY,EAAE;wBAErB,IAAI;QAOtD,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;KAC1B;0BAxCU,gCAAM;;;YACf,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;;aAGtB,UAAkB,MAAe;YAAjC,iBAkBC;YAjBC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBACvC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBACZ,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;iBACvB;;gBAEC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAE3B,MAAM,CAAC;aACR;YAED,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;YACtB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACvB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,UAAC,GAAiB;gBACzC,EAAE,CAAC,CAAC,GAAG,KAAK,KAAI,CAAC,CAAC,CAAC;oBACjB,GAAG,CAAC,MAAM,GAAG,KAAK,CAAC;iBACpB;aACF,CAAC,CAAC;SACJ;;;;IAoBM,+BAAQ,GAAf;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;KACjC;IAEM,kCAAW,GAAlB;QACE,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,EAAE,EAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,EAAE,KAAK,EAAC,CAAC,CAAC;KAC7D;;gBAhEF,SAAS,SAAC,EAAC,QAAQ,EAAE,kBAAkB,EAAC;;;;gBAFhC,eAAe;gBAD+D,UAAU;;;4BAM9F,KAAK;uBAEL,KAAK;6BAEL,KAAK;8BAEL,KAAK;gCAEL,KAAK;2BAGL,WAAW,SAAC,iBAAiB,cAC7B,KAAK;2BA0BL,MAAM;6BAEN,MAAM;4BAEN,MAAM;6BAEN,WAAW,SAAC,mBAAmB;;uBAnDlC;;SAKa,YAAY","sourcesContent":["import {\n  Directive, EventEmitter, HostBinding, Input, Output, TemplateRef, OnInit, OnDestroy, ElementRef } from '@angular/core';\nimport { TabsetComponent } from './tabset.component';\n\n@Directive({selector: 'hx-tab, [hx-tab]'})\nexport class TabDirective implements OnInit, OnDestroy {\n  /** tab header text */\n  @Input() public heading: string;\n  /** tab id */\n  @Input() public id: string;\n  /** if true tab can not be activated */\n  @Input() public disabled: boolean;\n  /** if true tab can be removable, additional button will appear */\n  @Input() public removable: boolean;\n  /** if set, will be added to the tab's class atribute */\n  @Input() public customClass: string;\n\n  /** tab active state toggle */\n  @HostBinding('class.is-active')\n  @Input()\n  public get active(): boolean {\n    return this._active;\n  }\n  \n  public set active(active: boolean) {\n    if (this.disabled && active || !active) {\n      if (!active) {\n        this._active = active;\n      }\n      //if(typeof active != 'undefined')\n        this.deselect.emit(this);\n\n      return;\n    }\n\n    this._active = active;\n    this.select.emit(this);\n    this.tabset.tabs.forEach((tab: TabDirective) => {\n      if (tab !== this) {\n        tab.active = false;\n      }\n    });\n  }\n\n  /** fired when tab became active, $event:Tab equals to selected instance of Tab component */\n  @Output() public select: EventEmitter<TabDirective> = new EventEmitter();\n  /** fired when tab became inactive, $event:Tab equals to deselected instance of Tab component */\n  @Output() public deselect: EventEmitter<TabDirective> = new EventEmitter();\n  /** fired before tab will be removed, $event:Tab equals to instance of removed tab */\n  @Output() public removed: EventEmitter<TabDirective> = new EventEmitter();\n\n  @HostBinding('class.hx-tab-pane') public addClasn = true;\n\n  public headingRef: TemplateRef<any>;\n  public tabset: TabsetComponent;\n  protected _active: boolean;\n\n  public constructor(tabset: TabsetComponent, public elementRef: ElementRef) {\n    this.tabset = tabset;\n    this.tabset.addTab(this);\n  }\n\n  public ngOnInit(): void {\n    this.removable = this.removable;\n  }\n\n  public ngOnDestroy(): void {\n    this.tabset.removeTab(this, {reselect: false, emit: false});\n  }\n}\n"]}